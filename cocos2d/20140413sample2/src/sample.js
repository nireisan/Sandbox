// Generated by CoffeeScript 1.7.1
(function() {
  var Sample, SampleScene;

  Sample = cc.Layer.extend({
    init: function() {
      var enemy, i, size, _i;
      this._super();
      size = cc.Director.getInstance().getWinSize();
      this.ship = cc.LabelTTF.create("=>", "Arial", 38);
      this.ship.setPosition(cc.p(size.width / 2, size.height / 2));
      this.addChild(this.ship, 5);
      this.enemies = [];
      for (i = _i = 0; _i <= 14; i = ++_i) {
        enemy = cc.LabelTTF.create("●", "Arial", 38);
        enemy.v = cc.p(-5, (Math.random() - 0.5) * 3);
        enemy.setColor(cc.c3b(255, 0, 0));
        enemy.setPosition(cc.p((Math.random() + 1) * size.width, Math.random() * size.height));
        this.addChild(enemy, 10);
        this.enemies.push(enemy);
      }
      this.scheduleUpdate();
      this.setTouchEnabled(true);
      return true;
    },
    update: function(dt) {
      var distance, enemy, k, pos, shipPos, size, _i, _len, _ref, _results;
      size = cc.Director.getInstance().getWinSize();
      shipPos = this.ship.getPosition();
      if (this.touched) {
        k = 0.7;
        this.ship.setPosition(shipPos.x, (shipPos.y * k) + (this.touched.y * (1.0 - k)));
      }
      _ref = this.enemies;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        enemy = _ref[_i];
        pos = enemy.getPosition();
        pos = cc.p(pos.x, pos.y);
        pos.x += enemy.v.x;
        pos.y += enemy.v.y;
        if (pos.x < 0) {
          pos.x = size.width;
        }
        if (pos.y < 0) {
          pos.y = size.height;
        }
        if (pos.y > size.height) {
          pos.y = 0;
        }
        distance = cc.pDistance(shipPos, pos);
        if (distance < 25) {
          cc.log('hit');
        }
        _results.push(enemy.setPosition(pos));
      }
      return _results;
    },
    onTouchesBegan: function(touches, event) {
      console.log(touches[0].getLocation());
      this.touched = touches[0].getLocation();
    },
    onTouchesMoved: function(touches, event) {
      console.log(touches[0].getLocation());
      this.touched = touches[0].getLocation();
    },
    onTouchesEnded: function(touches, event) {
      this.touched = null;
    },
    onTouchesCancelled: function(touches, event) {
      this.touched = null;
    }
  });

  SampleScene = cc.Scene.extend({
    onEnter: function() {
      var layer;
      this._super();
      layer = new Sample();
      layer.init();
      return this.addChild(layer);
    }
  });

  this.SampleScene = SampleScene;

}).call(this);

//# sourceMappingURL=sample.map
